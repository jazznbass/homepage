{
  "hash": "3e95e9d6fa55fce0c8b60b850d0306ca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: eRm\nauthor: Jürgen Wilbert\ndate: 2021/05/31\nabstract: An overview of extended Rasch modelling in R with the eRm package.\ncategories: \n  - irt\n  - rasch\n  - eRm\n  - statistics\n---\n\n\n\n\n\n# Prepare data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(eRm)\ndat <- readRDS(\"erm_example.rds\")\n\ndat <- dat %>% \n  mutate(\n    sum_d = rowSums(across(starts_with(\"D_\"))),\n    sum_a = rowSums(across(starts_with(\"A_\")))\n  )\n\ndat_d <- dat %>% select(starts_with(\"D_\"))\ndat_a <- dat %>% select(starts_with(\"A_\"))\n```\n:::\n\n\n\n# Fit model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_d <- RM(dat_d)\nfit_a <- RM(dat_a)\n```\n:::\n\n\n\n# Report item difficulty\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit_d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nResults of RM estimation: \n\nCall:  RM(X = dat_d) \n\nConditional log-likelihood: -290.0775 \nNumber of iterations: 7 \nNumber of parameters: 14 \n\nItem (Category) Difficulty Parameters (eta): with 0.95 CI:\n              Estimate Std. Error lower CI upper CI\nD_02_Jan         0.537      0.340   -0.129    1.204\nD_03_und        -0.064      0.332   -0.716    0.587\nD_04_Michael     0.054      0.333   -0.599    0.707\nD_05_zum        -0.183      0.332   -0.834    0.469\nD_06_Schulhof   -0.183      0.332   -0.834    0.469\nD_07_kommen     -0.301      0.333   -0.953    0.351\nD_08_stehen      0.054      0.333   -0.599    0.707\nD_09_die        -0.183      0.332   -0.834    0.469\nD_10_meisten     0.293      0.336   -0.364    0.951\nD_11_aus         0.414      0.338   -0.247    1.076\nD_12_der        -0.301      0.333   -0.953    0.351\nD_13_Klasse     -0.064      0.332   -0.716    0.587\nD_14_schon      -0.064      0.332   -0.716    0.587\nD_15_da          0.054      0.333   -0.599    0.707\n\nItem Easiness Parameters (beta) with 0.95 CI:\n                   Estimate Std. Error lower CI upper CI\nbeta D_01_Als         0.064      0.332   -0.587    0.716\nbeta D_02_Jan        -0.537      0.340   -1.204    0.129\nbeta D_03_und         0.064      0.332   -0.587    0.716\nbeta D_04_Michael    -0.054      0.333   -0.707    0.599\nbeta D_05_zum         0.183      0.332   -0.469    0.834\nbeta D_06_Schulhof    0.183      0.332   -0.469    0.834\nbeta D_07_kommen      0.301      0.333   -0.351    0.953\nbeta D_08_stehen     -0.054      0.333   -0.707    0.599\nbeta D_09_die         0.183      0.332   -0.469    0.834\nbeta D_10_meisten    -0.293      0.336   -0.951    0.364\nbeta D_11_aus        -0.414      0.338   -1.076    0.247\nbeta D_12_der         0.301      0.333   -0.351    0.953\nbeta D_13_Klasse      0.064      0.332   -0.587    0.716\nbeta D_14_schon       0.064      0.332   -0.587    0.716\nbeta D_15_da         -0.054      0.333   -0.707    0.599\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(fit_a)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nResults of RM estimation: \n\nCall:  RM(X = dat_a) \n\nConditional log-likelihood: -283.8798 \nNumber of iterations: 9 \nNumber of parameters: 14 \n\nItem (Category) Difficulty Parameters (eta): with 0.95 CI:\n              Estimate Std. Error lower CI upper CI\nA_02_Jan        -0.633      0.342   -1.303    0.037\nA_03_und        -0.025      0.335   -0.682    0.632\nA_04_Michael    -0.145      0.335   -0.802    0.513\nA_05_zum         0.216      0.336   -0.443    0.876\nA_06_Schulhof    0.216      0.336   -0.443    0.876\nA_07_kommen     -0.025      0.335   -0.682    0.632\nA_08_stehen      0.461      0.340   -0.205    1.126\nA_09_die         0.096      0.335   -0.562    0.753\nA_10_meisten     0.461      0.340   -0.205    1.126\nA_11_aus        -0.266      0.336   -0.925    0.394\nA_12_der         0.585      0.342   -0.086    1.256\nA_13_Klasse     -0.266      0.336   -0.925    0.394\nA_14_schon      -0.145      0.335   -0.802    0.513\nA_15_da         -0.266      0.336   -0.925    0.394\n\nItem Easiness Parameters (beta) with 0.95 CI:\n                   Estimate Std. Error lower CI upper CI\nbeta A_01_Als         0.266      0.336   -0.394    0.925\nbeta A_02_Jan         0.633      0.342   -0.037    1.303\nbeta A_03_und         0.025      0.335   -0.632    0.682\nbeta A_04_Michael     0.145      0.335   -0.513    0.802\nbeta A_05_zum        -0.216      0.336   -0.876    0.443\nbeta A_06_Schulhof   -0.216      0.336   -0.876    0.443\nbeta A_07_kommen      0.025      0.335   -0.632    0.682\nbeta A_08_stehen     -0.461      0.340   -1.126    0.205\nbeta A_09_die        -0.096      0.335   -0.753    0.562\nbeta A_10_meisten    -0.461      0.340   -1.126    0.205\nbeta A_11_aus         0.266      0.336   -0.394    0.925\nbeta A_12_der        -0.585      0.342   -1.256    0.086\nbeta A_13_Klasse      0.266      0.336   -0.394    0.925\nbeta A_14_schon       0.145      0.335   -0.513    0.802\nbeta A_15_da          0.266      0.336   -0.394    0.925\n```\n\n\n:::\n:::\n\n\n\n# Person parameters\n\n## Extract\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp_a <- person.parameter(fit_a)\npp_d <- person.parameter(fit_d)\n\ndat$pp_d <- coef(pp_d) # add person parameter to raw data frame\ndat$pp_a <- coef(pp_a) # add person parameter to raw data frame\n```\n:::\n\n\n\nCaution! Raw values of 0 and 15 (upper and lower limit) are between -Inf/+Inf and the upper/lower cut off and are estimated based on the distribution shape.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(pp_d, main = \"Dekodierungsleistung\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=576}\n:::\n\n```{.r .cell-code}\nplot(pp_a, main = \"Automatisierung\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-2.png){width=576}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplotPImap(fit_d)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=576}\n:::\n:::\n\n\n\n\n\n# Test Modelfit\n\n## Visual inspection of item discrimination\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplotjointICC(fit_d, xlim = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=576}\n:::\n\n```{.r .cell-code}\nplotjointICC(fit_a, xlim = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-2.png){width=576}\n:::\n:::\n\n\n\n\n## Likelihood ratio tests\n\nLRtests test for the estimation \"stability\" across several sub-samples of the data set.\n\nA median split allows for checking if the item-difficulty estimations are constant for the lower and upper part of the performance scale. This is similar to a test for homoscedasticity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlr_d <- LRtest(fit_d, splitcr = \"median\")\nlr_a <- LRtest(fit_a, splitcr = \"median\")\n\nlr_d\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nAndersen LR-test: \nLR-value: 6.954 \nChi-square df: 14 \np-value:  0.936 \n```\n\n\n:::\n\n```{.r .cell-code}\nlr_a\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nAndersen LR-test: \nLR-value: 17.088 \nChi-square df: 14 \np-value:  0.252 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplotGOF(lr_d, conf= list())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=576}\n:::\n\n```{.r .cell-code}\nplotGOF(lr_a, ctrline= list())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-2.png){width=576}\n:::\n:::\n\n\n\n\n\n# Wald Test\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWaldtest(fit_d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nWald test on item level (z-values):\n\n                   z-statistic p-value\nbeta D_01_Als            0.488   0.626\nbeta D_02_Jan            1.496   0.135\nbeta D_03_und           -0.943   0.346\nbeta D_04_Michael       -0.566   0.572\nbeta D_05_zum            0.094   0.925\nbeta D_06_Schulhof      -0.626   0.531\nbeta D_07_kommen         0.400   0.689\nbeta D_08_stehen        -0.566   0.572\nbeta D_09_die            0.808   0.419\nbeta D_10_meisten        0.132   0.895\nbeta D_11_aus           -0.272   0.785\nbeta D_12_der           -1.051   0.293\nbeta D_13_Klasse         0.488   0.626\nbeta D_14_schon         -0.227   0.821\nbeta D_15_da             0.860   0.390\n```\n\n\n:::\n\n```{.r .cell-code}\nWaldtest(fit_a)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nWald test on item level (z-values):\n\n                   z-statistic p-value\nbeta A_01_Als           -0.336   0.737\nbeta A_02_Jan           -0.239   0.811\nbeta A_03_und            1.184   0.236\nbeta A_04_Michael       -0.648   0.517\nbeta A_05_zum            1.894   0.058\nbeta A_06_Schulhof       1.195   0.232\nbeta A_07_kommen        -2.341   0.019\nbeta A_08_stehen        -0.311   0.756\nbeta A_09_die           -0.598   0.550\nbeta A_10_meisten       -0.311   0.756\nbeta A_11_aus           -0.336   0.737\nbeta A_12_der            0.000   1.000\nbeta A_13_Klasse        -0.336   0.737\nbeta A_14_schon          0.803   0.422\nbeta A_15_da             1.827   0.068\n```\n\n\n:::\n:::\n\n\n\n## Item In-Fit / Out Fit\n\nItemFit interpretation:\n\n- larger 2.0: Distorts or degrades the measurementsystem\n- 1.5-2.0: Unproductive for construction of measurement, but not degrading\n- 0.5-1.5: Productive for measurement\n- <0.5: Lessproductive for measurement, but not degrading. May produce misleadingly good reliabilities and separations\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nitemfit(pp_d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nItemfit Statistics: \n               Chisq df p-value Outfit MSQ Infit MSQ Outfit t Infit t Discrim\nD_01_Als      60.546 44   0.049      1.345     1.212    1.276   1.287   0.360\nD_02_Jan      55.231 44   0.119      1.227     1.163    0.846   0.950   0.397\nD_03_und      26.844 44   0.981      0.597     0.731   -1.722  -1.791   0.713\nD_04_Michael  42.051 44   0.555      0.934     0.931   -0.171  -0.382   0.569\nD_05_zum      46.485 44   0.370      1.033     1.029    0.211   0.232   0.490\nD_06_Schulhof 43.466 44   0.494      0.966     0.988   -0.040  -0.021   0.527\nD_07_kommen   45.764 44   0.399      1.017     1.036    0.153   0.277   0.462\nD_08_stehen   38.572 44   0.703      0.857     0.932   -0.491  -0.375   0.558\nD_09_die      52.715 44   0.173      1.171     1.064    0.697   0.444   0.457\nD_10_meisten  36.926 44   0.766      0.821     0.907   -0.634  -0.515   0.571\nD_11_aus      33.483 44   0.876      0.744     0.815   -0.945  -1.106   0.637\nD_12_der      33.313 44   0.880      0.740     0.892   -0.947  -0.652   0.569\nD_13_Klasse   57.032 44   0.090      1.267     1.124    1.027   0.792   0.417\nD_14_schon    47.227 44   0.342      1.049     0.937    0.273  -0.344   0.560\nD_15_da       57.058 44   0.090      1.268     1.174    1.036   1.068   0.382\n```\n\n\n:::\n\n```{.r .cell-code}\nitemfit(pp_a)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nItemfit Statistics: \n                Chisq df p-value Outfit MSQ Infit MSQ Outfit t Infit t Discrim\nA_01_Als       63.799 45   0.034      1.387     1.123    1.244   0.785   0.432\nA_02_Jan       44.536 45   0.491      0.968     1.006    0.018   0.090   0.544\nA_03_und       49.213 45   0.308      1.070     1.164    0.330   1.037   0.427\nA_04_Michael   35.200 45   0.853      0.765     0.889   -0.765  -0.672   0.601\nA_05_zum       62.154 45   0.046      1.351     1.290    1.163   1.735   0.334\nA_06_Schulhof  40.073 45   0.680      0.871     1.017   -0.354   0.157   0.534\nA_07_kommen    22.361 45   0.998      0.486     0.640   -2.086  -2.575   0.783\nA_08_stehen    28.876 45   0.970      0.628     0.823   -1.268  -1.104   0.655\nA_09_die       41.513 45   0.620      0.902     0.878   -0.245  -0.759   0.625\nA_10_meisten   40.687 45   0.655      0.885     0.899   -0.278  -0.584   0.589\nA_11_aus       34.902 45   0.861      0.759     0.929   -0.772  -0.395   0.591\nA_12_der       39.471 45   0.705      0.858     0.891   -0.347  -0.621   0.582\nA_13_Klasse    33.062 45   0.906      0.719     0.884   -0.933  -0.693   0.610\nA_14_schon     51.039 45   0.248      1.110     1.110    0.456   0.718   0.470\nA_15_da       103.787 45   0.000      2.256     1.387    3.192   2.191   0.239\n```\n\n\n:::\n:::\n\n\n\n## Person In-Fit / Out Fit\n\nPersonfit interpretation:\n\n- larger 2.0: Distorts or degrades the measurementsystem\n- 1.5-2.0: Unproductive for construction of measurement, but not degrading\n- 0.5-1.5: Productive for measurement\n- <0.5: Lessproductive for measurement, but not degrading. May produce misleadingly good reliabilities and separations\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npersonfit(pp_d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nPersonfit Statistics: \n     Chisq df p-value Outfit MSQ Infit MSQ Outfit t Infit t\nP3  18.927 14   0.168      1.262     1.049     0.61    0.27\nP5  15.238 14   0.362      1.016     1.015     0.22    0.21\nP6  14.437 14   0.418      0.962     1.000     0.27    0.30\nP7  13.111 14   0.518      0.874     0.945    -0.19   -0.02\nP8  15.300 14   0.358      1.020     1.012     0.17    0.13\nP9  13.724 14   0.470      0.915     0.982     0.04    0.15\nP10 14.481 14   0.415      0.965     0.991    -0.03    0.06\nP11 17.025 14   0.255      1.135     1.058     0.55    0.30\nP12 15.999 14   0.313      1.067     1.043     0.39    0.29\nP13 18.603 14   0.181      1.240     1.098     0.69    0.37\nP14 14.437 14   0.418      0.962     1.000     0.27    0.30\nP15 13.724 14   0.470      0.915     0.982     0.04    0.15\nP16 15.778 14   0.327      1.052     1.035     0.27    0.22\nP17 13.620 14   0.478      0.908     0.960    -0.10    0.02\nP18 15.606 14   0.338      1.040     1.041     0.59    0.59\nP19 13.829 14   0.463      0.922     0.957    -0.18   -0.07\nP20 15.778 14   0.327      1.052     1.035     0.27    0.22\nP21 13.658 14   0.475      0.911     0.936    -0.40   -0.29\nP22 13.922 14   0.456      0.928     0.926    -1.01   -1.05\nP23 13.165 14   0.514      0.878     0.880    -1.77   -1.76\nP24 13.396 14   0.496      0.893     0.919    -0.49   -0.39\nP25 14.991 14   0.379      0.999     1.000     0.02    0.03\nP26 13.170 14   0.513      0.878     0.880    -1.77   -1.76\nP27 15.468 14   0.347      1.031     1.021     0.29    0.22\nP28 16.349 14   0.293      1.090     1.067     0.74    0.60\nP29 14.214 14   0.434      0.948     0.953    -0.72   -0.68\nP30 16.024 14   0.312      1.068     1.063     0.95    0.93\nP31 15.018 14   0.377      1.001     1.007     0.07    0.10\nP32 14.503 14   0.413      0.967     0.975    -0.02    0.00\nP33 14.440 14   0.417      0.963     0.968    -0.26   -0.23\nP34 17.361 14   0.237      1.157     1.109     0.62    0.47\nP35 14.218 14   0.434      0.948     0.955    -0.20   -0.18\nP36 14.667 14   0.401      0.978     0.973     0.08    0.06\nP37 13.428 14   0.493      0.895     0.966     0.00    0.12\nP38 15.561 14   0.341      1.037     1.014     0.25    0.14\nP39 14.890 14   0.386      0.993     0.985     0.03   -0.02\nP40 17.319 14   0.240      1.155     1.049     0.45    0.27\nP41 16.305 14   0.295      1.087     1.036     0.34    0.25\nP42 14.612 14   0.405      0.974     1.005     0.28    0.30\nP43  9.352 14   0.808      0.623     0.923    -0.16    0.21\nP44 15.099 14   0.371      1.007     1.021     0.15    0.18\nP45 15.065 14   0.374      1.004     1.005     0.09    0.09\nP46 16.332 14   0.294      1.089     1.020     0.40    0.32\nP47 16.305 14   0.295      1.087     1.036     0.34    0.25\nP48 18.262 14   0.195      1.217     1.034     0.53    0.34\n```\n\n\n:::\n\n```{.r .cell-code}\npersonfit(pp_a)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nPersonfit Statistics: \n     Chisq df p-value Outfit MSQ Infit MSQ Outfit t Infit t\nP4  12.220 14   0.589      0.815     0.980     0.11    0.27\nP5   8.725 14   0.848      0.582     0.911    -0.21    0.19\nP6  14.450 14   0.417      0.963     1.011     0.14    0.20\nP7  16.258 14   0.298      1.084     0.981     0.34    0.15\nP8  13.671 14   0.475      0.911     0.999     0.22    0.30\nP9  13.088 14   0.520      0.873     0.937    -0.34   -0.15\nP10  8.725 14   0.848      0.582     0.911    -0.21    0.19\nP11 14.977 14   0.380      0.998     0.996     0.01   -0.02\nP12 14.291 14   0.428      0.953     1.000     0.02    0.13\nP13 16.408 14   0.289      1.094     1.082     0.50    0.48\nP14 16.279 14   0.297      1.085     1.040     0.34    0.26\nP15 12.310 14   0.581      0.821     0.957    -0.12    0.10\nP16 19.363 14   0.152      1.291     1.057     0.65    0.29\nP17 18.928 14   0.168      1.262     1.122     0.72    0.43\nP18 12.792 14   0.543      0.853     0.867    -1.06   -1.04\nP19 15.592 14   0.339      1.039     1.022     0.26    0.22\nP20 14.411 14   0.420      0.961     0.988    -0.12    0.00\nP21 12.136 14   0.595      0.809     0.814    -2.18   -2.21\nP22 14.732 14   0.397      0.982     0.980    -0.16   -0.20\nP23 13.039 14   0.523      0.869     0.884    -0.93   -0.89\nP24 14.846 14   0.389      0.990     0.995    -0.08   -0.02\nP25 13.750 14   0.468      0.917     0.909    -0.90   -1.02\nP26 16.428 14   0.288      1.095     1.096     1.03    1.08\nP27 13.448 14   0.492      0.897     0.899    -1.13   -1.16\nP28 15.995 14   0.314      1.066     1.070     0.38    0.42\nP29 13.976 14   0.451      0.932     0.940    -0.45   -0.43\nP30 16.719 14   0.271      1.115     1.111     1.22    1.25\nP31 17.110 14   0.250      1.141     1.117     1.01    0.90\nP32 16.487 14   0.285      1.099     1.094     1.07    1.07\nP33 12.345 14   0.579      0.823     0.845    -0.83   -0.78\nP34 13.757 14   0.468      0.917     0.921    -0.56   -0.58\nP35 17.053 14   0.253      1.137     1.119     0.99    0.92\nP36 15.893 14   0.320      1.060     1.063     0.66    0.73\nP37 15.219 14   0.363      1.015     1.031     0.15    0.20\nP38 14.328 14   0.426      0.955     1.007     0.27    0.30\nP39 15.560 14   0.341      1.037     1.048     0.22    0.26\nP40 15.269 14   0.360      1.018     1.014     0.15    0.14\nP41 14.119 14   0.441      0.941     0.951    -0.10   -0.09\nP42 13.641 14   0.477      0.909     0.965    -0.09    0.04\nP43 17.825 14   0.215      1.188     1.071     0.50    0.31\nP44 12.803 14   0.542      0.854     0.989     0.15    0.28\nP45 20.151 14   0.125      1.343     1.050     0.64    0.35\nP46 20.151 14   0.125      1.343     1.050     0.64    0.35\nP47 11.101 14   0.678      0.740     0.910    -0.29    0.02\nP48 20.151 14   0.125      1.343     1.050     0.64    0.35\nP49 20.152 14   0.125      1.343     1.050     0.64    0.35\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}