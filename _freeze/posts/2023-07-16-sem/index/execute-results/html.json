{
  "hash": "cafbdd3cbaefe67075db23738707e55c",
  "result": {
    "markdown": "---\ntitle: \"Material SEM\"\nauthor: \"JÃ¼rgen Wilbert\"\nabstract: Material for a brief explanation of sem.\ndate: 2023/07/16\nformat:\n  html:\n    page-layout: full\n    df-print: kable\n    toc: true\n    toc-location: right\n    self-contained: false\n    code-fold: true\ncategories:\n  - sem\n  - statistics\neditor: \n  markdown: \n    wrap: 72\nexecute: \n  warning: false\n  error: false\n---\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Create example data set\"}\n# Load the required library\nlibrary(dplyr)\nlibrary(lavaan)\n\n# Create the example data frame\nset.seed(122)  # For reproducibility\nn <- 2000      # Number of samples\n\nexample_data <- data.frame(\n  intercept = rep(3, n)) %>%\n  mutate(\n  X1 = rnorm(n, mean = 10, sd = 1),\n  X2 = X1 + rnorm(n, mean = 15, sd = 1),\n  X3 = X2 + rnorm(n, mean = 5, sd = 1),\n  residual = rnorm(n, mean = 0, sd = 1)\n)\n# Let's add a linear relationship to create criteria variable Y\n\nexample_data <- example_data %>% \n  mutate(Y = intercept + 0.5 * X1 + 0.3 * X2 + 0.2 * X3 + residual) %>%\n  relocate(Y)\n\nexample_data %>% slice(1:10)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|        Y| intercept|        X1|       X2|       X3|   residual|\n|--------:|---------:|---------:|--------:|--------:|----------:|\n| 21.80215|         3| 11.310701| 25.79129| 31.81429| -0.9534433|\n| 21.97488|         3|  9.124147| 24.77909| 30.94406|  0.7902634|\n| 21.18578|         3| 10.199524| 24.39014| 30.08077| -0.2471751|\n| 21.33084|         3| 10.465954| 26.04352| 31.80822| -1.0768354|\n| 19.58122|         3|  8.197943| 23.33933| 29.38427| -0.3964034|\n| 22.48321|         3| 11.448744| 27.12427| 32.35725| -0.8498953|\n| 23.04190|         3| 10.298854| 25.69187| 30.66430|  1.0520537|\n| 23.15183|         3| 10.361812| 26.26141| 29.45456|  1.2015870|\n| 20.93370|         3|  8.993060| 25.73242| 31.11644| -0.5058392|\n| 21.74071|         3|  9.743001| 25.59073| 31.35714| -0.0794387|\n\n</div>\n:::\n:::\n\n\nDo a regression with the `lm()` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_lm <- lm(Y ~ X1 + X2 + X3, data = example_data)\nsummary(fit_lm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Y ~ X1 + X2 + X3, data = example_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.3822 -0.6897  0.0199  0.7067  3.2161 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.96843    0.43415   6.837 1.07e-11 ***\nX1           0.50581    0.03166  15.977  < 2e-16 ***\nX2           0.29510    0.03150   9.369  < 2e-16 ***\nX3           0.20252    0.02246   9.019  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.013 on 1996 degrees of freedom\nMultiple R-squared:   0.56,\tAdjusted R-squared:  0.5593 \nF-statistic: 846.8 on 3 and 1996 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\nDo the same regression with lavaan\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the model\nmodel <- '\n  # Regress Y on X1, X2, and X3\n  Y ~ X1 + X2 + X3\n'\n\n# Fit the model\nfit <- sem(model, data = example_data)\n\n# View the summary of the model\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.15 ended normally after 1 iteration\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                         4\n\n  Number of observations                          2000\n\nModel Test User Model:\n                                                      \n  Test statistic                                 0.000\n  Degrees of freedom                                 0\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  Y ~                                                 \n    X1                0.506    0.032   15.993    0.000\n    X2                0.295    0.031    9.378    0.000\n    X3                0.203    0.022    9.028    0.000\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n   .Y                 1.023    0.032   31.623    0.000\n```\n:::\n:::\n\n\n... add estimations for the intercept and standardized weights:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- sem(model, data = example_data, meanstructure = TRUE)\nsummary(fit, standardized = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.15 ended normally after 16 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                         5\n\n  Number of observations                          2000\n\nModel Test User Model:\n                                                      \n  Test statistic                                 0.000\n  Degrees of freedom                                 0\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  Y ~                                                                   \n    X1                0.506    0.032   15.993    0.000    0.506    0.338\n    X2                0.295    0.031    9.378    0.000    0.295    0.271\n    X3                0.203    0.022    9.028    0.000    0.203    0.227\n\nIntercepts:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n   .Y                 2.968    0.434    6.844    0.000    2.968    1.946\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n   .Y                 1.023    0.032   31.623    0.000    1.023    0.440\n```\n:::\n:::\n\n\nAdding a measurement structure to all variables (endogeneous and\nexogeneous):\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the model\nmodel <- '\n  # Regress Y on X1, X2, and X3\n  LY =~ Y\n  LX1 =~ X1\n  LX2 =~ X2\n  LX3 =~ X3\n  LY ~ LX1 + LX2 + LX3\n'\n\n# Fit the model\nfit <- sem(model, data = example_data, meanstructure = TRUE)\n\n# View the summary of the model\nsummary(fit, standardize = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.15 ended normally after 36 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        14\n\n  Number of observations                          2000\n\nModel Test User Model:\n                                                      \n  Test statistic                                 0.000\n  Degrees of freedom                                 0\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  LY =~                                                                 \n    Y                 1.000                               1.525    1.000\n  LX1 =~                                                                \n    X1                1.000                               1.020    1.000\n  LX2 =~                                                                \n    X2                1.000                               1.398    1.000\n  LX3 =~                                                                \n    X3                1.000                               1.711    1.000\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  LY ~                                                                  \n    LX1               0.506    0.032   15.993    0.000    0.338    0.338\n    LX2               0.295    0.031    9.378    0.000    0.271    0.271\n    LX3               0.203    0.022    9.028    0.000    0.227    0.227\n\nCovariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  LX1 ~~                                                                \n    LX2               1.015    0.039   25.940    0.000    0.712    0.712\n    LX3               1.035    0.045   22.821    0.000    0.593    0.593\n  LX2 ~~                                                                \n    LX3               1.932    0.069   28.095    0.000    0.807    0.807\n\nIntercepts:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n   .Y                21.477    0.034  629.821    0.000   21.477   14.083\n   .X1                9.996    0.023  438.423    0.000    9.996    9.803\n   .X2               25.007    0.031  799.771    0.000   25.007   17.883\n   .X3               29.987    0.038  783.830    0.000   29.987   17.527\n   .LY                0.000                               0.000    0.000\n    LX1               0.000                               0.000    0.000\n    LX2               0.000                               0.000    0.000\n    LX3               0.000                               0.000    0.000\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n   .Y                 0.000                               0.000    0.000\n   .X1                0.000                               0.000    0.000\n   .X2                0.000                               0.000    0.000\n   .X3                0.000                               0.000    0.000\n   .LY                1.023    0.032   31.623    0.000    0.440    0.440\n    LX1               1.040    0.033   31.623    0.000    1.000    1.000\n    LX2               1.955    0.062   31.623    0.000    1.000    1.000\n    LX3               2.927    0.093   31.623    0.000    1.000    1.000\n```\n:::\n:::\n\n\nModel a new latent variable latent_y\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- '\n  latent =~ X1 + X2 + X3\n'\n\nfit <- sem(model, data = example_data, std.lv = TRUE)\n\n# View the summary of the model\nsummary(fit, standardize = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.15 ended normally after 15 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                         6\n\n  Number of observations                          2000\n\nModel Test User Model:\n                                                      \n  Test statistic                                 0.000\n  Degrees of freedom                                 0\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  latent =~                                                             \n    X1                0.738    0.020   36.119    0.000    0.738    0.723\n    X2                1.377    0.025   55.303    0.000    1.377    0.984\n    X3                1.403    0.033   42.483    0.000    1.403    0.820\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n   .X1                0.496    0.018   27.802    0.000    0.496    0.477\n   .X2                0.061    0.030    2.045    0.041    0.061    0.031\n   .X3                0.958    0.043   22.186    0.000    0.958    0.327\n    latent            1.000                               1.000    1.000\n```\n:::\n:::\n\n\nA more complex example from the lavaan example data:\n\n![](sem.png)\n\ny1 Expert ratings of the freedom of the press in 1960\n\ny2 The freedom of political opposition in 1960\n\ny3 The fairness of elections in 1960\n\ny4 The effectiveness of the elected legislature in 1960\n\ny5 Expert ratings of the freedom of the press in 1965\n\ny6 The freedom of political opposition in 1965\n\ny7 The fairness of elections in 1965\n\ny8 The effectiveness of the elected legislature in 1965\n\nx1 The gross national product (GNP) per capita in 1960\n\nx2 The inanimate energy consumption per capita in 1960\n\nx3 The percentage of the labor force in industry in 1960\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyModel <- '\n   # latent variables\n     ind60 =~ x1 + x2 + x3\n     dem60 =~ y1 + y2 + y3 + y4\n     dem65 =~ y5 + y6 + y7 + y8\n   # regressions\n     dem60 ~ ind60\n     dem65 ~ ind60 + dem60\n   # residual covariances\n     y1 ~~ y5\n     y2 ~~ y4 + y6\n     y3 ~~ y7\n     y4 ~~ y8\n     y6 ~~ y8\n'\nfit <- sem(model = myModel, data  = PoliticalDemocracy)\nsummary(fit, standardize = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.15 ended normally after 68 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        31\n\n  Number of observations                            75\n\nModel Test User Model:\n                                                      \n  Test statistic                                38.125\n  Degrees of freedom                                35\n  P-value (Chi-square)                           0.329\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  ind60 =~                                                              \n    x1                1.000                               0.670    0.920\n    x2                2.180    0.139   15.742    0.000    1.460    0.973\n    x3                1.819    0.152   11.967    0.000    1.218    0.872\n  dem60 =~                                                              \n    y1                1.000                               2.223    0.850\n    y2                1.257    0.182    6.889    0.000    2.794    0.717\n    y3                1.058    0.151    6.987    0.000    2.351    0.722\n    y4                1.265    0.145    8.722    0.000    2.812    0.846\n  dem65 =~                                                              \n    y5                1.000                               2.103    0.808\n    y6                1.186    0.169    7.024    0.000    2.493    0.746\n    y7                1.280    0.160    8.002    0.000    2.691    0.824\n    y8                1.266    0.158    8.007    0.000    2.662    0.828\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  dem60 ~                                                               \n    ind60             1.483    0.399    3.715    0.000    0.447    0.447\n  dem65 ~                                                               \n    ind60             0.572    0.221    2.586    0.010    0.182    0.182\n    dem60             0.837    0.098    8.514    0.000    0.885    0.885\n\nCovariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n .y1 ~~                                                                 \n   .y5                0.624    0.358    1.741    0.082    0.624    0.296\n .y2 ~~                                                                 \n   .y4                1.313    0.702    1.871    0.061    1.313    0.273\n   .y6                2.153    0.734    2.934    0.003    2.153    0.356\n .y3 ~~                                                                 \n   .y7                0.795    0.608    1.308    0.191    0.795    0.191\n .y4 ~~                                                                 \n   .y8                0.348    0.442    0.787    0.431    0.348    0.109\n .y6 ~~                                                                 \n   .y8                1.356    0.568    2.386    0.017    1.356    0.338\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n   .x1                0.082    0.019    4.184    0.000    0.082    0.154\n   .x2                0.120    0.070    1.718    0.086    0.120    0.053\n   .x3                0.467    0.090    5.177    0.000    0.467    0.239\n   .y1                1.891    0.444    4.256    0.000    1.891    0.277\n   .y2                7.373    1.374    5.366    0.000    7.373    0.486\n   .y3                5.067    0.952    5.324    0.000    5.067    0.478\n   .y4                3.148    0.739    4.261    0.000    3.148    0.285\n   .y5                2.351    0.480    4.895    0.000    2.351    0.347\n   .y6                4.954    0.914    5.419    0.000    4.954    0.443\n   .y7                3.431    0.713    4.814    0.000    3.431    0.322\n   .y8                3.254    0.695    4.685    0.000    3.254    0.315\n    ind60             0.448    0.087    5.173    0.000    1.000    1.000\n   .dem60             3.956    0.921    4.295    0.000    0.800    0.800\n   .dem65             0.172    0.215    0.803    0.422    0.039    0.039\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}